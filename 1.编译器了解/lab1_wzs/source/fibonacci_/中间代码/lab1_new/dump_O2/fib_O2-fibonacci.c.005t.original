
;; Function getchar (null)
;; enabled by -tree-original


{
  return getc (stdin);
}


;; Function fgetc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ ;
}


;; Function putchar (null)
;; enabled by -tree-original


{
  return putc (__c, stdout);
}


;; Function fputc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c);
}


;; Function feof_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 16) != 0;
}


;; Function ferror_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 32) != 0;
}


;; Function sprintf (null)
;; enabled by -tree-original


{
  return __builtin___sprintf_chk ((char *) __s, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsprintf_chk ((char *) __s, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function snprintf (null)
;; enabled by -tree-original


{
  return __builtin___snprintf_chk ((char *) __s, __n, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vsnprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsnprintf_chk ((char *) __s, __n, 2, __builtin_dynamic_object_size ((const void *) __s, 1), (const char *) __fmt, __ap);
}


;; Function fprintf (null)
;; enabled by -tree-original


{
  return __fprintf_chk ((struct FILE *) __stream, 2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function printf (null)
;; enabled by -tree-original


{
  return __printf_chk (2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (stdout, 2, (const char *) __fmt, __ap);
}


;; Function vfprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk ((struct FILE *) __stream, 2, (const char *) __fmt, __ap);
}


;; Function dprintf (null)
;; enabled by -tree-original


{
  return __dprintf_chk (__fd, 2, (const char *) __fmt, __builtin_va_arg_pack ());
}


;; Function vdprintf (null)
;; enabled by -tree-original


{
  return __vdprintf_chk (__fd, 2, (const char *) __fmt, __ap);
}


;; Function fgets (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __s, 1);

    size_t sz = __builtin_dynamic_object_size ((const void *) __s, 1);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || ((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n <= (long unsigned int) sz)
    {
      return __fgets_alias ((char *) __s, __n, (struct FILE *) __stream);
    }
  if (((__builtin_constant_p (__n) != 0 && __n > 0) && __builtin_constant_p ((long unsigned int) __n <= (long unsigned int) sz) != 0) && (long unsigned int) __n > (long unsigned int) sz)
    {
      return __fgets_chk_warn ((char *) __s, sz, __n, (struct FILE *) __stream);
    }
  return __fgets_chk ((char *) __s, sz, __n, (struct FILE *) __stream);
}


;; Function fread (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || __builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      return __fread_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function fread_unlocked (null)
;; enabled by -tree-original


{
  size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);

    size_t sz = __builtin_dynamic_object_size ((const void *) __ptr, 0);
  if (__builtin_constant_p (sz) != 0 && sz == 18446744073709551615 || __builtin_constant_p (sz / __size >= __n) != 0 && sz / __size >= __n)
    {
      if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) <= 4294967295) && __size * __n <= 8)
        {
          {
            size_t __cnt = __size * __n;
            char * __cptr = (char *) __ptr;

                        size_t __cnt = __size * __n;
                        char * __cptr = (char *) __ptr;
            if (__cnt == 0)
              {
                return 0;
              }
            goto <D.3374>;
            <D.3373>:;
            {
              int __c = getc_unlocked ((struct FILE *) __stream);

                            int __c = getc_unlocked ((struct FILE *) __stream);
              if (__c == -1)
                {
                  goto <D.3371>;
                }
              *__cptr++  = (char) __c;
            }
             --__cnt;
            <D.3374>:;
            if (__cnt != 0) goto <D.3373>; else goto <D.3371>;
            <D.3371>:;
            return (size_t) ((long unsigned int) (__cptr - (char *) __ptr) / (long unsigned int) __size);
          }
        }
      return __fread_unlocked_alias ((void *) __ptr, __size, __n, (struct FILE *) __stream);
    }
  if (__builtin_constant_p (sz / __size >= __n) != 0 && sz / __size < __n)
    {
      return __fread_unlocked_chk_warn ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
    }
  return __fread_unlocked_chk ((void *) __ptr, sz, __size, __n, (struct FILE *) __stream);
}


;; Function main (null)
;; enabled by -tree-original


{
  int a = 0;
  int b = 1;
  int next;
  int i;

    int a = 0;
    int b = 1;
    int next;
    int i;
  printf ((const char * restrict) "Fibonacci Series up to %d terms:\n", 10);
  i = 0;
  goto <D.3384>;
  <D.3383>:;
  if (i <= 1)
    {
      next = i;
    }
  else
    {
      next = a + b;
      a = b;
      b = next;
    }
  printf ((const char * restrict) "%d ", next);
  i++ ;
  <D.3384>:;
  if (i <= 9) goto <D.3383>; else goto <D.3381>;
  <D.3381>:;
  printf ((const char * restrict) "\n");
  return 0;
}
return 0;

