
;; Function main (main, funcdef_no=23, decl_uid=3375, cgraph_uid=24, symbol_order=23) (executed once)



main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,5u} r1={8d,3u} r2={5d} r4={8d,3u} r5={9d,4u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={9d,2u} r18={4d} r19={1d,8u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={2d,2u} r83={3d,5u} r84={3d,3u} r85={2d,2u} r87={1d,1u} r91={1d,2u} 
;;    total ref usage 385{318d,67u,0e} in 35{31 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(16){ }d-1(19){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 83 84 85 87 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 83 84 85 87 91
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91

( 5 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
;; live  in  	 83 84 85
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; live  out 	 83 84 85

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83
;; live  in  	 83 84 85
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 82 83
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; live  out 	 82 83 84

( 4 7 )->[5]->( 3 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 84
;; lr  def 	 84 85
;; live  in  	 82 83 84
;; live  gen 	 84 85
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; live  out 	 83 84 85

( 4 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 3 )->[7]->( 5 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
;; live  in  	 83 84 85
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 82 83 84
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; live  out 	 82 83 84

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 19 [frame]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(6){ }u-1(7){ }u-1(19){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

starting the processing of deferred insns
ending the processing of deferred insns
setting blocks to analyze 3, 4, 5, 7
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 7 ( 0.78)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 7 ( 0.78)
df_worklist_dataflow_doublequeue: n_basic_blocks 9 n_edges 10 count 8 ( 0.89)


starting region dump


main

Dataflow summary:
def_info->table_size = 154, use_info->table_size = 0
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,5u} r1={8d,3u} r2={5d} r4={8d,3u} r5={9d,4u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={9d,2u} r18={4d} r19={1d,8u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={2d,2u} r83={3d,5u} r84={3d,3u} r85={2d,2u} r87={1d,1u} r91={1d,2u} 
;;    total ref usage 385{318d,67u,0e} in 35{31 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,9] 4[10,13] 5[14,17] 8[18,19] 9[20,21] 10[22,23] 11[24,25] 12[26,27] 13[28,29] 14[30,31] 15[32,33] 17[34,40] 18[41,42] 20[43,44] 21[45,46] 22[47,48] 23[49,50] 24[51,52] 25[53,54] 26[55,56] 27[57,58] 28[59,60] 29[61,62] 30[63,64] 31[65,66] 32[67,68] 33[69,70] 34[71,72] 35[73,74] 36[75,76] 37[77,78] 38[79,80] 39[81,82] 44[83,84] 45[85,86] 46[87,88] 47[89,90] 48[91,92] 49[93,94] 50[95,96] 51[97,98] 52[99,100] 53[101,102] 54[103,104] 55[105,106] 56[107,108] 57[109,110] 58[111,112] 59[113,114] 60[115,116] 61[117,118] 62[119,120] 63[121,122] 64[123,124] 65[125,126] 66[127,128] 67[129,130] 68[131,132] 69[133,134] 70[135,136] 71[137,138] 72[139,140] 73[141,142] 74[143,144] 75[145,146] 82[147,148] 83[149,150] 84[151,152] 85[153,153] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83
;; lr  def 	 17 [flags]
;; live  in  	 83 84 85
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(4) 83[149,150],84[151],85[153]
;; rd  gen 	(1) 17[34]
;; rd  kill	(7) 17[34,35,36,37,38,39,40]
;;  UD chains for artificial uses at top

(code_label 35 64 18 3 4 (nil) [0 uses])
(note 18 35 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 21
;;      reg 83 { d150(bb 7 insn 53) d149(bb 4 insn 31) }
(insn 21 18 22 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 83 [ i ])
            (const_int 1 [0x1]))) "fibonacci.c":11:12 11 {*cmpsi_1}
     (nil))
;;   UD chains for insn luid 1 uid 22
;;      reg 17 { d34(bb 3 insn 21) }
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "fibonacci.c":11:12 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 214748372 (nil)))
 -> 45)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; live  out 	 83 84 85
;; rd  out 	(4) 83[149,150],84[151],85[153]
;;  UD chains for artificial uses at bottom
;;   reg 6 { }
;;   reg 7 { }
;;   reg 16 { }
;;   reg 19 { }


;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83
;; live  in  	 83 84 85
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 17 [flags] 82 83
;; live  kill	 17 [flags]
;; rd  in  	(5) 17[34],83[149,150],84[151],85[153]
;; rd  gen 	(4) 0[1],17[38],82[147],83[149]
;; rd  kill	(15) 0[0,1,2,3],17[34,35,36,37,38,39,40],82[147,148],83[149,150]
;;  UD chains for artificial uses at top

(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 24
;;      reg 84 { d151(bb 5 insn 4) }
;;      reg 85 { d153(bb 5 insn 3) }
(insn 24 23 25 4 (parallel [
            (set (reg/v:SI 82 [ b ])
                (plus:SI (reg/v:SI 85 [ a ])
                    (reg/v:SI 84 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":14:18 246 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 85 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
;;   UD chains for insn luid 1 uid 25
;;      reg 82 { d147(bb 4 insn 24) }
(insn 25 24 27 4 (set (reg:SI 1 dx)
        (reg/v:SI 82 [ b ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
;;   UD chains for insn luid 2 uid 27
;;      reg 91 { }
(insn 27 25 28 4 (set (reg:DI 4 si)
        (reg/f:DI 91)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7892cf25fab0 *.LC1>)
            (nil))))
;;   UD chains for insn luid 3 uid 28
(insn 28 27 29 4 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
;;   UD chains for insn luid 4 uid 29
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
;;   UD chains for insn luid 5 uid 30
;;      reg 7 { }
;;      reg 0 { d0(bb 4 insn 29) }
;;      reg 1 { d4(bb 4 insn 25) }
;;      reg 4 { d10(bb 4 insn 27) }
;;      reg 5 { d14(bb 4 insn 28) }
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;   UD chains for insn luid 6 uid 31
;;      reg 83 { d150(bb 7 insn 53) d149(bb 4 insn 31) }
(insn 31 30 32 4 (parallel [
            (set (reg/v:SI 83 [ i ])
                (plus:SI (reg/v:SI 83 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":10:38 discrim 2 246 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;   UD chains for insn luid 7 uid 32
;;      reg 83 { d149(bb 4 insn 31) }
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83 [ i ])
            (const_int 10 [0xa]))) "fibonacci.c":10:19 discrim 1 11 {*cmpsi_1}
     (nil))
;;   UD chains for insn luid 8 uid 33
;;      reg 17 { d38(bb 4 insn 32) }
(jump_insn 33 32 54 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fibonacci.c":10:19 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 122003916 (nil)))
 -> 38)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; live  out 	 82 83 84
;; rd  out 	(3) 82[147],83[149],84[151]
;;  UD chains for artificial uses at bottom
;;   reg 6 { }
;;   reg 7 { }
;;   reg 16 { }
;;   reg 19 { }


;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 84
;; lr  def 	 84 85
;; live  in  	 82 83 84
;; live  gen 	 84 85
;; live  kill	
;; rd  in  	(6) 82[147,148],83[149,150],84[151,152]
;; rd  gen 	(2) 84[151],85[153]
;; rd  kill	(3) 84[151,152],85[153]
;;  UD chains for artificial uses at top

(code_label 54 33 34 5 5 (nil) [0 uses])
(note 34 54 3 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 3
;;      reg 84 { d152(bb 7 insn 9) d151(bb 5 insn 4) }
(insn 3 34 4 5 (set (reg/v:SI 85 [ a ])
        (reg/v:SI 84 [ a ])) "fibonacci.c":5:12 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ a ])
        (nil)))
;;   UD chains for insn luid 1 uid 4
;;      reg 82 { d148(bb 7 insn 8) d147(bb 4 insn 24) }
(insn 4 3 38 5 (set (reg/v:SI 84 [ a ])
        (reg/v:SI 82 [ b ])) "fibonacci.c":5:12 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 82 [ b ])
        (nil)))
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; live  out 	 83 84 85
;; rd  out 	(4) 83[149,150],84[151],85[153]
;;  UD chains for artificial uses at bottom
;;   reg 6 { }
;;   reg 7 { }
;;   reg 16 { }
;;   reg 19 { }


;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(19){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 83 84 85 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7] 82 83 84
;; live  in  	 83 84 85
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 82 83 84
;; live  kill	 17 [flags]
;; rd  in  	(5) 17[34],83[149,150],84[151],85[153]
;; rd  gen 	(4) 0[3],82[148],83[150],84[152]
;; rd  kill	(17) 0[0,1,2,3],17[34,35,36,37,38,39,40],82[147,148],83[149,150],84[151,152]
;;  UD chains for artificial uses at top

(code_label 45 41 46 7 2 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;;   UD chains for insn luid 0 uid 47
;;      reg 83 { d150(bb 7 insn 53) d149(bb 4 insn 31) }
(insn 47 46 49 7 (set (reg:SI 1 dx)
        (reg/v:SI 83 [ i ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
;;   UD chains for insn luid 1 uid 49
;;      reg 91 { }
(insn 49 47 50 7 (set (reg:DI 4 si)
        (reg/f:DI 91)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7892cf25fab0 *.LC1>)
            (nil))))
;;   UD chains for insn luid 2 uid 50
(insn 50 49 51 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
;;   UD chains for insn luid 3 uid 51
(insn 51 50 52 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
;;   UD chains for insn luid 4 uid 52
;;      reg 7 { }
;;      reg 0 { d2(bb 7 insn 51) }
;;      reg 1 { d6(bb 7 insn 47) }
;;      reg 4 { d12(bb 7 insn 49) }
;;      reg 5 { d16(bb 7 insn 50) }
(call_insn 52 51 53 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
;;   UD chains for insn luid 5 uid 53
;;      reg 83 { d150(bb 7 insn 53) d149(bb 4 insn 31) }
(insn 53 52 8 7 (parallel [
            (set (reg/v:SI 83 [ i ])
                (plus:SI (reg/v:SI 83 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":10:38 discrim 2 246 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;   UD chains for insn luid 6 uid 8
;;      reg 84 { d151(bb 5 insn 4) }
(insn 8 53 9 7 (set (reg/v:SI 82 [ b ])
        (reg/v:SI 84 [ a ])) "fibonacci.c":10:38 discrim 2 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ a ])
        (nil)))
;;   UD chains for insn luid 7 uid 9
;;      reg 85 { d153(bb 5 insn 3) }
(insn 9 8 60 7 (set (reg/v:SI 84 [ a ])
        (reg/v:SI 85 [ a ])) "fibonacci.c":10:38 discrim 2 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 85 [ a ])
        (nil)))
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 19 [frame] 82 83 84 91
;; live  out 	 82 83 84
;; rd  out 	(3) 82[148],83[150],84[152]
;;  UD chains for artificial uses at bottom
;;   reg 6 { }
;;   reg 7 { }
;;   reg 16 { }
;;   reg 19 { }



Loop 1 is not simple.
;; Not considering loop, is too big
;; Not considering loop, is too big
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={9d,5u} r1={8d,3u} r2={5d} r4={8d,3u} r5={9d,4u} r6={1d,8u} r7={1d,12u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,7u} r17={9d,2u} r18={4d} r19={1d,8u} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r82={2d,2u} r83={3d,5u} r84={3d,3u} r85={2d,2u} r87={1d,1u} r91={1d,2u} 
;;    total ref usage 385{318d,67u,0e} in 35{31 regular + 4 call} insns.
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 10 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 2 13 2 (set (reg:SI 1 dx)
        (const_int 10 [0xa])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 87)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7892cf25fa20 *.LC0>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/f:DI 87)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7892cf25fa20 *.LC0>)
            (nil))))
(insn 15 14 16 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
(call_insn 17 16 5 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 5 17 6 2 (set (reg/v:SI 83 [ i ])
        (const_int 0 [0])) "fibonacci.c":10:12 83 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/v:SI 84 [ a ])
        (const_int 1 [0x1])) "fibonacci.c":6:16 83 {*movsi_internal}
     (nil))
(insn 7 6 64 2 (set (reg/v:SI 85 [ a ])
        (const_int 0 [0])) "fibonacci.c":6:9 83 {*movsi_internal}
     (nil))
(insn 64 7 35 2 (set (reg/f:DI 91)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7892cf25fab0 *.LC1>)) -1
     (nil))
(code_label 35 64 18 3 4 (nil) [0 uses])
(note 18 35 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 18 22 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 83 [ i ])
            (const_int 1 [0x1]))) "fibonacci.c":11:12 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "fibonacci.c":11:12 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 214748372 (nil)))
 -> 45)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg/v:SI 82 [ b ])
                (plus:SI (reg/v:SI 85 [ a ])
                    (reg/v:SI 84 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":14:18 246 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 85 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 27 4 (set (reg:SI 1 dx)
        (reg/v:SI 82 [ b ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 27 25 28 4 (set (reg:DI 4 si)
        (reg/f:DI 91)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7892cf25fab0 *.LC1>)
            (nil))))
(insn 28 27 29 4 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
(call_insn 30 29 31 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 31 30 32 4 (parallel [
            (set (reg/v:SI 83 [ i ])
                (plus:SI (reg/v:SI 83 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":10:38 discrim 2 246 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 83 [ i ])
            (const_int 10 [0xa]))) "fibonacci.c":10:19 discrim 1 11 {*cmpsi_1}
     (nil))
(jump_insn 33 32 54 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) "fibonacci.c":10:19 discrim 1 995 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 122003916 (nil)))
 -> 38)
(code_label 54 33 34 5 5 (nil) [0 uses])
(note 34 54 3 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 3 34 4 5 (set (reg/v:SI 85 [ a ])
        (reg/v:SI 84 [ a ])) "fibonacci.c":5:12 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ a ])
        (nil)))
(insn 4 3 38 5 (set (reg/v:SI 84 [ a ])
        (reg/v:SI 82 [ b ])) "fibonacci.c":5:12 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 82 [ b ])
        (nil)))
      ; pc falls through to BB 3
(code_label 38 4 39 6 3 (nil) [1 uses])
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg:SI 5 di)
        (const_int 10 [0xa])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(call_insn 41 40 45 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7892cf52fd00 __builtin_putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7892cf52fd00 __builtin_putchar>)
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
      ; pc falls through to BB 8
(code_label 45 41 46 7 2 (nil) [1 uses])
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 49 7 (set (reg:SI 1 dx)
        (reg/v:SI 83 [ i ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 49 47 50 7 (set (reg:DI 4 si)
        (reg/f:DI 91)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 82 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7892cf25fab0 *.LC1>)
            (nil))))
(insn 50 49 51 7 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 83 {*movsi_internal}
     (nil))
(insn 51 50 52 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 85 {*movqi_internal}
     (nil))
(call_insn 52 51 53 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":86:10 1013 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7892cf559800 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 53 52 8 7 (parallel [
            (set (reg/v:SI 83 [ i ])
                (plus:SI (reg/v:SI 83 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "fibonacci.c":10:38 discrim 2 246 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 8 53 9 7 (set (reg/v:SI 82 [ b ])
        (reg/v:SI 84 [ a ])) "fibonacci.c":10:38 discrim 2 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 84 [ a ])
        (nil)))
(insn 9 8 60 7 (set (reg/v:SI 84 [ a ])
        (reg/v:SI 85 [ a ])) "fibonacci.c":10:38 discrim 2 83 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 85 [ a ])
        (nil)))
      ; pc falls through to BB 5
(note 60 9 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 60 59 8 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "fibonacci.c":22:1 83 {*movsi_internal}
     (nil))
(insn 59 58 0 8 (use (reg/i:SI 0 ax)) "fibonacci.c":22:1 -1
     (nil))
